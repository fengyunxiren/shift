#使用自动多对多并发的高性能、高可靠性的文件传输工具
**简介**：Shift是一个高性能的本地远端文件传输的轻量级框架脚本，它拥有应对各种错误的复原能力。Shift支持多种文件传输协议，可以自动为参与传输的主机的每一部分选择最合适的机制以适应具有不同软件和网络访问限制的异构客户端。通过从客户端和服务端采集文件系统信息以检测文件系统的等价性和能否路径重写，这样可以使客户端根据负载和可用性自动并发完成将单个或多个文件传输到多个服务器上。通过消除单点的故障，可以同时提升文件传输的性能和可靠性，突破了单一系统的瓶颈。通过哈希密码表保证端对端的完整性，在出错的时候只需将错误的部分重传。本文描述了Shift设计和应用方法以及提升文件传输性能和可靠性的设计细节。
##1 介绍
在高端计算环境下，从计算资源里远程传输大数据文件是非常常见的事情，由于用户分布在不同的组织中，需要将输入数据传入计算机进行处理，然后将输出数据传回进行进一步分析。当新的文件系统上线或者现存的文件系统存储失衡时，管理员需要优化资源配置，这时，同样的数据在本地不同的文件系统传输也会变得非常频繁。在以上情况中，文件从资源端传到目的端都需要经过许多器件，在这之中，有非常多的机会来优化传输性能，它与你犯错误的机会一样多。我们工作的重点是研发自动的、高性能的、高可靠性的、简单易用、容易部署支持以上两种传输的工具。
目前已经存在许多提供高稳定性和（或者）高性能的文件传输工具，但是大多数都不支持本地的文件传输，需要特殊的安全模式和或者传输工具，不方便个人用户的部署，而且没有优化到最佳性能。本文介绍了Shift传输工具，一个全新的文件传输框架：*S*elf-*H*ealing *I*ndependent *F*ile *T*ransfers。Shift通过运用各种技术，提供了一个高性能、高适应性的本地和远端的文件传输方法。这些技术包括通过哈希密码保持端对端的完整性，传输限制以防止计算机资源被耗尽，基于负载和可用性，让传输资源达到平衡。此外，Shift给广大用户的操作环境做了最小的假设，为适应各种异构环境，Shift做了特殊设计。Shift在文件传输的可靠性和自动的单个或多个文件的并行传输上比任何其它命令行传输应用都要优越，同时也非常方便个人用户或者团队部署。
Shift包含一个客户端和一个管理组件。图1展示了文件传输系统组件的基本位置顺序，一个单一的文件传输可能包含许多不同的文件操作，如创建目录，复制文件，修改属性，计算校验码等，初始客户端执行操作包括给出传输文件以及将它们在管理端初始化。这个客户端与其它客户端动态连接，然后像管理端请求一系列的操作，并试着完成这些操作，并将结果返回给管理端，客户端会根据可行性，性能和当前系统特性利用不同的应用完成文件操作。本文后面会详细讨论文件的传输过程。
Shift的核心依赖Perl语言和直接或间接利用如SSH公共秘钥等非交互式身份验证的SSH来访问远程端.客户端不需要提供SSH访问，但是，如果这样，Shift的并发特性将不可用。Shift同时支持手动设置密钥对和单点登陆SSH。客户端首先用一个轻量级的身份验证和授权框架Mesh进行测试，Mesh提供利用SSH密钥对进行单点登陆的方法。
