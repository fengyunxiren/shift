#使用自动多对多并发的高性能、高可靠性的文件传输工具
**简介**：`Shift`是一个高性能的本地远端文件传输的轻量级框架脚本，它拥有应对各种错误的复原能力。Shift支持多种文件传输协议，可以自动为参与传输的主机的每一部分选择最合适的机制以适应具有不同软件和网络访问限制的异构客户端。通过从客户端和服务端采集文件系统信息以检测文件系统的等价性和能否路径重写，这样可以使客户端根据负载和可用性自动并发完成将单个或多个文件传输到多个服务器上。通过消除单点的故障，可以同时提升文件传输的性能和可靠性，突破了单一系统的瓶颈。通过哈希密码表保证端对端的完整性，在出错的时候只需将错误的部分重传。本文描述了`Shift`设计和应用方法以及提升文件传输性能和可靠性的设计细节。
##1 介绍
在高端计算环境下，从计算资源里远程传输大数据文件是非常常见的事情，由于用户分布在不同的组织中，需要将输入数据传入计算机进行处理，然后将输出数据传回进行进一步分析。当新的文件系统上线或者现存的文件系统存储失衡时，管理员需要优化资源配置，这时，同样的数据在本地不同的文件系统传输也会变得非常频繁。在以上情况中，文件从资源端传到目的端都需要经过许多器件，在这之中，有非常多的机会来优化传输性能，它与你犯错误的机会一样多。我们工作的重点是研发自动的、高性能的、高可靠性的、简单易用、容易部署支持以上两种传输的工具。
目前已经存在许多提供高稳定性和（或者）高性能的文件传输工具，但是大多数都不支持本地的文件传输，需要特殊的安全模式和或者传输工具，不方便个人用户的部署，而且没有优化到最佳性能。本文介绍了`Shift`传输工具，一个全新的文件传输框架：*S*elf-*H*ealing *I*ndependent *F*ile *T*ransfers。`Shift`通过运用各种技术，提供了一个高性能、高适应性的本地和远端的文件传输方法。这些技术包括通过哈希密码保持端对端的完整性，传输限制以防止计算机资源被耗尽，基于负载和可用性，让传输资源达到平衡。此外，`Shift`给广大用户的操作环境做了最小的假设，为适应各种异构环境，`Shift`做了特殊设计。`Shift`在文件传输的可靠性和自动的单个或多个文件的并行传输上比任何其它命令行传输应用都要优越，同时也非常方便个人用户或者团队部署。
`Shift`包含一个客户端和一个管理组件。图1展示了文件传输系统组件的基本位置顺序，一个单一的文件传输可能包含许多不同的文件操作，如创建目录，复制文件，修改属性，计算校验码等，初始客户端执行操作包括给出传输文件以及将它们在管理端初始化。这个客户端与其它客户端动态连接，然后像管理端请求一系列的操作，并试着完成这些操作，并将结果返回给管理端，客户端会根据可行性，性能和当前系统特性利用不同的应用完成文件操作。本文后面会详细讨论文件的传输过程。
`Shift`的核心依赖`Perl`语言和直接或间接利用如`SSH`公共秘钥等非交互式身份验证的`SSH`来访问远程端.客户端不需要提供`SSH`访问，但是，如果这样，`Shift`的并发特性将不可用。`Shift`同时支持手动设置密钥对和单点登陆`SSH`。客户端首先用一个轻量级的身份验证和授权框架`Mesh`进行测试，`Mesh`提供利用`SSH`密钥对进行单点登陆的方法。通过少量修改临时处理凭证，客户端便可支持其它的身份验证框架如`GSI`。
本文结构如下，第二部分展示相关的工作，第三部分和第四部分介绍`Shift`的管理端和客户端，第五部分详细描述传输时的并发和负载平衡，最后一部分为总结和下一步工作计划。
##2 相关工作
`cp`和`scp`分别是本地和远程文件传输的标准方法。然而也存在许多其它的文件传输工具，能够提供更好的性能和（或者）可到性。`BbFTP`是一个支持多种`TCP`流的远程文件传输工具，它能够配置缓冲区的大小以提高文件传输的性能，同时有一个简单的重试机制来保证传输的可靠性。`Rsync`同时支持本地和远程传输，可以通过部分传输同步资源端和目的地端的文件，它通过最小化传输文件，提升了传输性能，同时通过纠错机制提高了文件传输的可靠性。`GridFTP`实现了`BbFTP`和`Rsync`大部分功能，并且由更容易配置的试错机制，还额外增加了提升性能的传输方法如基于`UDP`的数据流和在多台服务器之间的数据传输。Mcp是一个高性能的本地复制工具，支持多线程的单个或多个文件的复制，它支持多节点，双缓冲，以及集成了并行的哈希运算。在可行的情况下，`Shift`可以利用以上任何一种工具来提升性能。
许多工具通过修改现存的传输工具来提升性能和（或者）可靠性。`Lim`用包含`GridFTP`的`Naradabrokering`作为一种更可靠的通信媒介。`Sultanate`等通过在文件后面添加数字签名来检测在`FTP`传输中文件坏点出现的位置。如果坏点位置检测出来，只需要重新传输该文件的一小部分。然而，由于需要同时修改客户端和服务端的软件，这个工具部署起来比较困难。`HPN-SSH`是`OpenSSH`的一个增强版本，通过实现动态调整`SSH`服务端和多线程运行`AES-CRT`秘钥使得传输性能得到了大幅度提升，`HPN-SSH`需要通过修改客户端和服务器端来达到最佳性能，两端的修改都不会影响`SSH`的兼容性。
其它的工具（包括`Shift`）利用现存的传输工具来构建模块来提升性能。`Globus Toolkit`的文件可靠性传输服务`RFT`通过增加第三方包`GRidFTP`从中央服务器发起传输来提升传输的可靠性。
